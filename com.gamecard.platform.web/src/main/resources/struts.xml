<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
        "http://struts.apache.org/dtds/struts-2.0.dtd">
<struts>
    <!-- 上传相关信息 -->
    <constant name="struts.multipart.saveDir" value="${sp.platform.data.path}"/>
    <constant name="struts.multipart.maxSize" value="4096000"/>
    <!-- 指定Web应用的默认编码集，相当于hgttpServletRequest的setCharacterEncoding方法 -->
    <constant name="struts.i18n.encoding" value="UTF-8"/>
    <!-- 该属性指定需要Struts2处理的请求后缀，默认是action，多个的话以(,)隔开 -->
    <constant name="struts.action.extension" value="action,jsp,,"/>
    <!-- 设置浏览器是否缓存静态内容，默认值为true(生产环境下使用),开发阶段最好关闭 -->
    <constant name="struts.serve.static.browserCache" value="false"/>
    <!-- 当Struts的配置文件修改后，系统是否重新加载该文件，默认为false(生产环境下使用)，开发环境可打开 -->
    <constant name="struts.configuration.xml.reload" value="true"/>
    <!-- 开发模式下使用，这样可以打印出更详细的错误信息 -->
    <constant name="struts.devMode" value="false"/>
    <!-- 默认的视图主题 -->
    <constant name="struts.ui.theme" value="simple"/>
    <!-- Struts2跟Spring集成的关键 表示 action是由Spring来创建的 -->
    <constant name="struts.objectFactory" value="spring"/>
    <constant name="struts.ognl.allowStaticMethodAccess" value="true"/>
    <constant name="struts.convention.default.parent.package" value="crud-default"/>

    <!-- convention类重新加载 -->
    <constant name="struts.convention.classes.reload" value="true" />
    <!-- 结果资源的路径 -->
    <constant name="struts.convention.result.path" value="/WEB-INF/content/" />
    <constant name="struts.convention.package.locators" value="web"/>
    <constant name="struts.convention.package.locators.basePackage" value="com.sp.platform.web"/>

    <package name="crud-default" extends="convention-default,json-default">
        <interceptors>
            <!-- 默认拦截器 -->
            <interceptor-stack name="crudStack">
                <interceptor-ref name="store">
                    <param name="operationMode">AUTOMATIC</param>
                </interceptor-ref>
                <interceptor-ref name="paramsPrepareParamsStack"/>
            </interceptor-stack>

            <!-- 需要判断用户登陆的拦截器 -->
            <interceptor-stack name="loginInterceptor">
                <interceptor-ref name="store">
                    <param name="operationMode">AUTOMATIC</param>
                </interceptor-ref>
                <interceptor-ref name="session-interceptor"/>
                <interceptor-ref name="auth-interceptor"/>
                <interceptor-ref name="paramsPrepareParamsStack"/>
                <interceptor-ref name="fileUploadStack"/>
            </interceptor-stack>
            <!-- 需要判断用户登陆的拦截器 -->
            <interceptor-stack name="statusInterceptor">
                <interceptor-ref name="store">
                    <param name="operationMode">AUTOMATIC</param>
                </interceptor-ref>
                <interceptor-ref name="status-interceptor"/>
                <interceptor-ref name="paramsPrepareParamsStack"/>
            </interceptor-stack>

            <interceptor name="status-interceptor" class="com.sp.platform.web.interceptors.StatusInterceptor"/>
            <interceptor name="session-interceptor" class="com.sp.platform.web.interceptors.LoginInterceptor"/>
            <interceptor name="auth-interceptor" class="com.sp.platform.web.interceptors.AuthInterceptor"/>
        </interceptors>

        <default-interceptor-ref name="crudStack"/>

        <global-results>
            <result name="login" type="redirect">/login.jsp</result>
            <result name="auth_error" type="redirect">/auth_error.jsp</result>
            <result name="404" type="redirect">/common/404.jsp</result>
            <result name="403" type="redirect">/common/403.jsp</result>
            <result name="close" type="redirect">/close.jsp</result>
        </global-results>
    </package>
</struts>
